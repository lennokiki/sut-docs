(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{216:function(t,s,e){"use strict";e.r(s);var n=e(28),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),e("h2",{attrs:{id:"typeisequal-obj1-obj2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeisequal-obj1-obj2"}},[t._v("#")]),t._v(" typeIsEqual(obj1, obj2)")]),t._v(" "),e("h3",{attrs:{id:"判断两个对象是否值相等"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断两个对象是否值相等"}},[t._v("#")]),t._v(" 判断两个对象是否值相等")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const obj1 = { a: '1', b: [1, 2, 3]}\nconst obj2 = { a: '1', b: [1, 2, 3]}\nconst obj3 = { a: '2', b: [1, 2, 3]}\n\n// res1输出`true`\nconst res1 = typeIsEqual(obj1, obj2)\n\n// res2输出`false`\nconst res2 = typeIsEqual(obj2, obj3)\n")])])]),e("h2",{attrs:{id:"typeis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeis"}},[t._v("#")]),t._v(" typeIs"),e("a",{attrs:{href:"target"}})]),t._v(" "),e("h3",{attrs:{id:"判断目标类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断目标类型"}},[t._v("#")]),t._v(" 判断目标类型")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 判断目标是否为字符串类型\nconst res = typeIs.isString(target)\n \n// 判断目标是否为数值类型\nconst res = typeIs.isNumber(target)\n \n// 判断目标是否为函数类型\nconst res = typeIs.isFunction(target)\n \n// 判断目标是否为布尔类型\nconst res = typeIs.isBoolean(target)\n \n// 判断目标是否为对象类型\nconst res = typeIs.isObject(target)\n \n// 判断目标是否为数组类型\nconst res = typeIs.isArray(target)\n \n// 判断目标是否为正则类型\nconst res = typeIs.isRegExp(target)\n \n// 判断目标是否为arguments即参数类型\nconst res = typeIs.isArguments(target)\n \n// 判断目标是否为日期类型\nconst res = typeIs.isDate(target)\n \n// 判断目标是否为Symbol类型\nconst res = typeIs.isSymbol(target)\n \n// 判断目标是否为错误类型\nconst res = typeIs.isError(target)\n \n// 判断目标是否为Promise类型\nconst res = typeIs.isPromise(target)\n \n// 判断目标是否为Set类型\nconst res = typeIs.isSet(target)\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);